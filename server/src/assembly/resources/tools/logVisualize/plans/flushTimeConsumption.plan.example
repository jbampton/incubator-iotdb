#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# This is a detailed example of visualization plan. Please read it carefully before you write your
# own plans.

# the name of the this plan, should be unique
name=flushTimeConsumption
# a regular expression that defines how the targeted logs are formatted and what fields are
# interesting and should be grouped
content_pattern=Storage group (.*) memtable (.*) flushing a memtable has finished! Time consumption: (.*)ms

# the following 3 properties are all one-based, if there are more than one measurements or tags, use
# comma to separate the positions
# the position of the groups in the pattern that will be plotted as values, must be real values.
# The number of measurements should be the same as the legends'. Each measurement will be plotted
# as a chart. If this is unset, a scatter plot will be drawn instead of a timeseries plot.
measurement_positions=3
# the name of each measurement, the legends should not contain special chars like '\' '/'.
legends=Time
# the position of the strings in the pattern that will be used to group the logs, each log group
# will be plotted as a timeseries
tag_positions=1

# only logs with levels higher or equal to this will be visualized, one of TRACE,DEBUG,INFO,WARN,ERROR
# min_level=INFO
# only logs whose threads are in the list will be visualized, comma separated
# thread_name_white_list=pool-1-IoTDB-JDBC-Client-thread-5
# only logs whose classes are in the list will be visualized, comma separated
# class_name_white_list=org.apache.iotdb.db.engine.storagegroup.StorageGroupProcessor
# only logs whose line numbers are in the list will be visualized, comma separated
# line_num_white_list=392

# the pattern of start_date and end_date, only after this is set will start_date and end_date become
# valid
# date_pattern=yyyy-MM-dd hh:mm:ss
# only logs generated within [start_date, end_date] will be visualized and the dates must be
# parsable by date_pattern, you can set none, either or both of them. The unset ones mean unlimited.
# start_date=2019-08-21 09:00:00
# end_date=2019-08-22 09:00:00